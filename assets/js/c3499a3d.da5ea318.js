"use strict";(self.webpackChunkdocusaurus_website=self.webpackChunkdocusaurus_website||[]).push([[6594],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,g=c["".concat(p,".").concat(d)]||c[d]||m[d]||l;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9608:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:1,title:"log"},i="log",o={unversionedId:"r-development/log",id:"r-development/log",title:"log",description:"Logging functions",source:"@site/reference/r-development/log.md",sourceDirName:"r-development",slug:"/r-development/log",permalink:"/test_pkgsaurus/reference/r-development/log",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"log"},sidebar:"tutorialSidebar",previous:{title:"R development",permalink:"/test_pkgsaurus/reference/category/r-development"},next:{title:"format_r",permalink:"/test_pkgsaurus/reference/r-development/format_r"}},p={},s=[{value:"Description",id:"description",level:2},{value:"Format",id:"format",level:2},{value:"Usage",id:"usage",level:2},{value:"Details",id:"details",level:2},{value:"Examples",id:"examples",level:2}],u={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"log"},(0,a.kt)("inlineCode",{parentName:"h1"},"log")),(0,a.kt)("p",null,"Logging functions"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Convenient way to log messages at a desired severity level."),(0,a.kt)("h2",{id:"format"},"Format"),(0,a.kt)("p",null,"An object of class ",(0,a.kt)("inlineCode",{parentName:"p"},"list")," of length 7."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-r"},"log\n")),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"log")," object is a list of logging functions, in order of decreasing severity:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"fatal"),"  ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"error"),"  ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"warn"),"  ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"success"),"  ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"info"),"  ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"debug"),"  ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"trace"),"  "),(0,a.kt)("p",{parentName:"li"},"Rhino configures logging based on settings read from the ",(0,a.kt)("inlineCode",{parentName:"p"},"config.yml")," file\nin the root of your project:\n"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"rhino_log_level")," : The minimum severity of messages to be logged. ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"rhino_log_file")," : The file to save logs to. If ",(0,a.kt)("inlineCode",{parentName:"p"},"NA")," , standard error stream will be used. "),(0,a.kt)("p",{parentName:"li"},"The default ",(0,a.kt)("inlineCode",{parentName:"p"},"config.yml")," file uses !expr Sys.getenv()\nso that log level and file can also be configured\nby setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"RHINO_LOG_LEVEL")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"RHINO_LOG_FILE")," environment variables."),(0,a.kt)("p",{parentName:"li"},"The functions re-exported by the ",(0,a.kt)("inlineCode",{parentName:"p"},"log")," object are aliases for ",(0,a.kt)("inlineCode",{parentName:"p"},"{logger}")," functions.\nYou can also import the package and use it directly to utilize its full capabilities."))),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-r"},'box::use(rhino[log])\n\n# Messages can be formatted using glue syntax.\nname <- "Rhino"\nlog$warn("Hello {name}!")\nlog$info("{1:3} + {1:3} = {2 * (1:3)}")\n')))}m.isMDXComponent=!0}}]);